
-- =====================================================
-- SISTEMA DE INVENTARIO - SCHEMA MEJORADO PARA OCI
-- =====================================================

-- =====================================================
-- TABLA DE CATEGORÍAS
-- =====================================================
CREATE TABLE CATEGORIAS (
  ID          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NOMBRE      VARCHAR2(50) NOT NULL UNIQUE,
  DESCRIPCION VARCHAR2(255),
  ESTADO      VARCHAR2(20) DEFAULT 'ACTIVO' CHECK (ESTADO IN ('ACTIVO', 'INACTIVO')),
  CREADO_EN   TIMESTAMP DEFAULT SYSTIMESTAMP,
  MODIFICADO_EN TIMESTAMP DEFAULT SYSTIMESTAMP,
  CREADO_POR  VARCHAR2(50) DEFAULT 'SYSTEM',
  MODIFICADO_POR VARCHAR2(50) DEFAULT 'SYSTEM'
);

-- =====================================================
-- TABLA DE BODEGAS
-- =====================================================
CREATE TABLE BODEGAS (
  ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NOMBRE        VARCHAR2(100) NOT NULL,
  DIRECCION     VARCHAR2(255),
  TELEFONO      VARCHAR2(20),
  EMAIL         VARCHAR2(100),
  RESPONSABLE   VARCHAR2(100),
  ESTADO        VARCHAR2(20) DEFAULT 'ACTIVO' CHECK (ESTADO IN ('ACTIVO', 'INACTIVO', 'MANTENIMIENTO')),
  CAPACIDAD_MAX NUMBER DEFAULT 0,
  CREADO_EN     TIMESTAMP DEFAULT SYSTIMESTAMP,
  MODIFICADO_EN TIMESTAMP DEFAULT SYSTIMESTAMP,
  CREADO_POR    VARCHAR2(50) DEFAULT 'SYSTEM',
  MODIFICADO_POR VARCHAR2(50) DEFAULT 'SYSTEM'
);

-- =====================================================
-- TABLA DE PRODUCTOS
-- =====================================================
CREATE TABLE PRODUCTOS (
  ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  SKU           VARCHAR2(50) NOT NULL UNIQUE,
  NOMBRE        VARCHAR2(120) NOT NULL,
  DESCRIPCION   VARCHAR2(500),
  STOCK         NUMBER DEFAULT 0 NOT NULL CHECK (STOCK >= 0),
  STOCK_MINIMO  NUMBER DEFAULT 0 CHECK (STOCK_MINIMO >= 0),
  STOCK_MAXIMO  NUMBER,
  PRECIO        NUMBER(10,2) DEFAULT 0 CHECK (PRECIO >= 0),
  CATEGORIA_ID  NUMBER,
  BODEGA_ID     NUMBER,
  ESTADO        VARCHAR2(20) DEFAULT 'ACTIVO' CHECK (ESTADO IN ('ACTIVO', 'INACTIVO', 'DESCONTINUADO')),
  UNIDAD_MEDIDA VARCHAR2(20) DEFAULT 'UNIDAD',
  PESO          NUMBER(8,2),
  DIMENSIONES   VARCHAR2(50),
  CREADO_EN     TIMESTAMP DEFAULT SYSTIMESTAMP,
  MODIFICADO_EN TIMESTAMP DEFAULT SYSTIMESTAMP,
  CREADO_POR    VARCHAR2(50) DEFAULT 'SYSTEM',
  MODIFICADO_POR VARCHAR2(50) DEFAULT 'SYSTEM',
  
  CONSTRAINT FK_PRODUCTO_CATEGORIA 
    FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIAS(ID),
  CONSTRAINT FK_PRODUCTO_BODEGA 
    FOREIGN KEY (BODEGA_ID) REFERENCES BODEGAS(ID),
  
  -- Constraints de tabla (no de columna) para referencias entre columnas
  CONSTRAINT CK_STOCK_VALIDO 
    CHECK (STOCK >= STOCK_MINIMO),
  CONSTRAINT CK_STOCK_MAXIMO_VALIDO
    CHECK (STOCK_MAXIMO IS NULL OR STOCK_MAXIMO >= STOCK_MINIMO)
);

-- =====================================================
-- TABLA DE MOVIMIENTOS DE INVENTARIO
-- =====================================================
CREATE TABLE MOVIMIENTOS_INVENTARIO (
  ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  PRODUCTO_ID   NUMBER NOT NULL,
  BODEGA_ID     NUMBER NOT NULL,
  TIPO_MOVIMIENTO VARCHAR2(20) NOT NULL CHECK (TIPO_MOVIMIENTO IN ('ENTRADA', 'SALIDA', 'AJUSTE', 'TRANSFERENCIA')),
  CANTIDAD      NUMBER NOT NULL,
  STOCK_ANTERIOR NUMBER NOT NULL,
  STOCK_NUEVO   NUMBER NOT NULL,
  MOTIVO        VARCHAR2(255),
  REFERENCIA    VARCHAR2(100),
  FECHA_MOVIMIENTO TIMESTAMP DEFAULT SYSTIMESTAMP,
  USUARIO       VARCHAR2(50) DEFAULT 'SYSTEM',
  
  CONSTRAINT FK_MOVIMIENTO_PRODUCTO 
    FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTOS(ID),
  CONSTRAINT FK_MOVIMIENTO_BODEGA 
    FOREIGN KEY (BODEGA_ID) REFERENCES BODEGAS(ID)
);

-- =====================================================
-- ÍNDICES PARA OPTIMIZAR PERFORMANCE
-- =====================================================

-- Índices para CATEGORIAS
CREATE INDEX IDX_CATEGORIAS_NOMBRE ON CATEGORIAS(NOMBRE);
CREATE INDEX IDX_CATEGORIAS_ESTADO ON CATEGORIAS(ESTADO);

-- Índices para BODEGAS
CREATE INDEX IDX_BODEGAS_NOMBRE ON BODEGAS(NOMBRE);
CREATE INDEX IDX_BODEGAS_ESTADO ON BODEGAS(ESTADO);
CREATE INDEX IDX_BODEGAS_RESPONSABLE ON BODEGAS(RESPONSABLE);

-- Índices para PRODUCTOS
CREATE INDEX IDX_PRODUCTOS_SKU ON PRODUCTOS(SKU);
CREATE INDEX IDX_PRODUCTOS_NOMBRE ON PRODUCTOS(NOMBRE);
CREATE INDEX IDX_PRODUCTOS_BODEGA ON PRODUCTOS(BODEGA_ID);
CREATE INDEX IDX_PRODUCTOS_CATEGORIA ON PRODUCTOS(CATEGORIA_ID);
CREATE INDEX IDX_PRODUCTOS_ESTADO ON PRODUCTOS(ESTADO);
CREATE INDEX IDX_PRODUCTOS_STOCK ON PRODUCTOS(STOCK);

-- Índices para MOVIMIENTOS_INVENTARIO
CREATE INDEX IDX_MOVIMIENTOS_PRODUCTO ON MOVIMIENTOS_INVENTARIO(PRODUCTO_ID);
CREATE INDEX IDX_MOVIMIENTOS_BODEGA ON MOVIMIENTOS_INVENTARIO(BODEGA_ID);
CREATE INDEX IDX_MOVIMIENTOS_FECHA ON MOVIMIENTOS_INVENTARIO(FECHA_MOVIMIENTO);
CREATE INDEX IDX_MOVIMIENTOS_TIPO ON MOVIMIENTOS_INVENTARIO(TIPO_MOVIMIENTO);

-- =====================================================
-- TRIGGERS PARA AUDITORÍA AUTOMÁTICA
-- =====================================================

-- Trigger para actualizar MODIFICADO_EN automáticamente en CATEGORIAS
CREATE OR REPLACE TRIGGER TR_CATEGORIAS_AUDIT
  BEFORE UPDATE ON CATEGORIAS
  FOR EACH ROW
BEGIN
  :NEW.MODIFICADO_EN := SYSTIMESTAMP;
END;
/

-- Trigger para actualizar MODIFICADO_EN automáticamente en BODEGAS
CREATE OR REPLACE TRIGGER TR_BODEGAS_AUDIT
  BEFORE UPDATE ON BODEGAS
  FOR EACH ROW
BEGIN
  :NEW.MODIFICADO_EN := SYSTIMESTAMP;
END;
/

-- Trigger para actualizar MODIFICADO_EN automáticamente en PRODUCTOS
CREATE OR REPLACE TRIGGER TR_PRODUCTOS_AUDIT
  BEFORE UPDATE ON PRODUCTOS
  FOR EACH ROW
BEGIN
  :NEW.MODIFICADO_EN := SYSTIMESTAMP;
END;
/

-- =====================================================
-- DATOS INICIALES
-- =====================================================

-- Insertar categorías base
INSERT INTO CATEGORIAS (NOMBRE, DESCRIPCION) VALUES 
('Electrónicos', 'Productos electrónicos y tecnología'),
('Ropa', 'Vestimenta y accesorios'),
('Hogar', 'Artículos para el hogar'),
('Deportes', 'Equipamiento deportivo'),
('Alimentos', 'Productos alimenticios');

-- Insertar bodega inicial
INSERT INTO BODEGAS (NOMBRE, DIRECCION, RESPONSABLE, CAPACIDAD_MAX) VALUES 
('Bodega Principal', 'Av. Principal 123, Santiago', 'Juan Pérez', 10000);

-- Insertar productos de ejemplo
INSERT INTO PRODUCTOS (SKU, NOMBRE, DESCRIPCION, STOCK, STOCK_MINIMO, PRECIO, CATEGORIA_ID, BODEGA_ID) VALUES 
('LAP-001', 'Laptop HP Pavilion', 'Laptop 15 pulgadas, 8GB RAM, 256GB SSD', 10, 2, 599990, 1, 1),
('CEL-001', 'Smartphone Samsung Galaxy', 'Smartphone 6.1 pulgadas, 128GB', 25, 5, 299990, 1, 1),
('CAM-001', 'Camiseta Deportiva', 'Camiseta 100% algodón, talla M', 50, 10, 15990, 2, 1),
('MES-001', 'Mesa de Centro', 'Mesa de centro de madera, 80x40cm', 5, 1, 89990, 3, 1);

COMMIT;

-- =====================================================
-- VISTAS ÚTILES
-- =====================================================

-- Vista para productos con información completa
CREATE OR REPLACE VIEW V_PRODUCTOS_COMPLETOS AS
SELECT 
  p.ID,
  p.SKU,
  p.NOMBRE as PRODUCTO_NOMBRE,
  p.DESCRIPCION,
  p.STOCK,
  p.STOCK_MINIMO,
  p.STOCK_MAXIMO,
  p.PRECIO,
  c.NOMBRE as CATEGORIA_NOMBRE,
  b.NOMBRE as BODEGA_NOMBRE,
  p.ESTADO,
  p.UNIDAD_MEDIDA,
  CASE 
    WHEN p.STOCK <= p.STOCK_MINIMO THEN 'STOCK_BAJO'
    WHEN p.STOCK = 0 THEN 'SIN_STOCK'
    ELSE 'STOCK_OK'
  END as ESTADO_STOCK
FROM PRODUCTOS p
LEFT JOIN CATEGORIAS c ON p.CATEGORIA_ID = c.ID
LEFT JOIN BODEGAS b ON p.BODEGA_ID = b.ID;

-- Vista para productos con stock bajo
CREATE OR REPLACE VIEW V_PRODUCTOS_STOCK_BAJO AS
SELECT * FROM V_PRODUCTOS_COMPLETOS 
WHERE ESTADO_STOCK IN ('STOCK_BAJO', 'SIN_STOCK');

-- Vista para resumen de inventario por bodega
CREATE OR REPLACE VIEW V_RESUMEN_BODEGAS AS
SELECT 
  b.ID,
  b.NOMBRE as BODEGA_NOMBRE,
  b.DIRECCION,
  b.RESPONSABLE,
  COUNT(p.ID) as TOTAL_PRODUCTOS,
  SUM(p.STOCK) as STOCK_TOTAL,
  SUM(p.STOCK * p.PRECIO) as VALOR_INVENTARIO,
  COUNT(CASE WHEN p.STOCK <= p.STOCK_MINIMO THEN 1 END) as PRODUCTOS_STOCK_BAJO
FROM BODEGAS b
LEFT JOIN PRODUCTOS p ON b.ID = p.BODEGA_ID
GROUP BY b.ID, b.NOMBRE, b.DIRECCION, b.RESPONSABLE;

COMMIT;

-- =====================================================
-- MENSAJE DE CONFIRMACIÓN
-- =====================================================
SELECT 'SCHEMA DE INVENTARIO CREADO EXITOSAMENTE EN OCI' as MENSAJE FROM DUAL;
SELECT 'Tablas creadas: CATEGORIAS, BODEGAS, PRODUCTOS, MOVIMIENTOS_INVENTARIO' as TABLAS FROM DUAL;
SELECT 'Vistas creadas: V_PRODUCTOS_COMPLETOS, V_PRODUCTOS_STOCK_BAJO, V_RESUMEN_BODEGAS' as VISTAS FROM DUAL;
SELECT 'Datos iniciales: 5 categorías, 1 bodega, 4 productos' as DATOS FROM DUAL;
